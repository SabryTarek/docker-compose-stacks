services:
  cachet:
    image: cachethq/docker
    container_name: cachet
    hostname: cachet
    restart: unless-stopped
    ports:
      - 6341:8000
    environment:
      DB_DRIVER: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: cachet
      DB_USERNAME: cachet
      DB_PASSWORD: cachet
      DB_PREFIX: chq_
      APP_URL: 
      APP_KEY: base64:YOUR_UNIQUE_KEY
      APP_LOG: errorlog
      APP_ENV: production
      APP_DEBUG: false
      DEBUG: false
      DOCKER: true # this is need so when the container restarts it will not have you do setup again.
      CACHE_DRIVER: apc
      SESSION_DRIVER: apc
      SESSION_DOMAIN: 
      SESSION_SECURE_COOKIE: 
      QUEUE_DRIVER: database
      CACHET_EMOJI: true
      CACHET_BEACON: true
      CACHET_AUTO_TWITTER: 
      MAIL_DRIVER: smtp
      MAIL_HOST: 
      MAIL_PORT: 
      MAIL_USERNAME: 
      MAIL_PASSWORD: 
      MAIL_ADDRESS: 
      MAIL_NAME: 
      MAIL_ENCRYPTION: 
      REDIS_HOST: 
      REDIS_DATABASE: 
      REDIS_PORT: 
      REDIS_PASSWORD: 
      GITHUB_TOKEN: 
      NEXMO_KEY: 
      NEXMO_SECRET: 
      NEXMO_SMS_FROM: 
      TRUSTED_PROXIES: 
    depends_on:
      - postgres


  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    volumes:
      - ./data/var/lib/postgresql/data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: cachet
      POSTGRES_USER: cachet
      POSTGRES_PASSWORD: cachet
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
