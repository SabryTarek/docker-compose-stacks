services:
  offen:
    image: offen/offen
    container_name: offen
    hostname: offen
    restart: always
    ports:
      - 8634:80
      - 1673:443
    volumes:
      - ./data/var/www/.cache:/var/www/.cache
      - ./data/var/opt/offen:/var/opt/offen
    environemnt:
      OFFEN_DATABASE_DIALECT: mysql
      OFFEN_DATABASE_CONNECTIONSTRING: root:offen@tcp(mysql:3306)/offen?parseTime=true
      OFFEN_DATABASE_CONNECTIONRETRIES: 10
    # This holds a comma separated list of domains you want Offen to acquire
    # free SSL certificates from LetsEncrypt for, e.g. `offen.mysite.com`.
    # In this setup, you cannot serve a domain that is not listed in here.
      OFFEN_SERVER_AUTOTLS: "<xxx>"
    # This is an application secret used for signing login cookies and URLs.
    # You can generate a unique secret for your setup by running
    # `docker run --rm offen/offen:latest secret -quiet`
    # If you do not set a value, a random secret will be created each time Offen
    # starts, invalidating all existing login sessions, pending password resets and
    # pending user invites.
      OFFEN_SECRET: 
    # These credentials are used for sending transactional email when resetting
    # a password or inviting new users. Offen will start without these being set
    # but keep in mind you won't be able to recover your account without
    # configuring SMTP.
      OFFEN_SMTP_HOST: 
      OFFEN_SMTP_USER: 
      OFFEN_SMTP_PASSWORD: 
      OFFEN_SMTP_SENDER: 
    logging:
      driver: syslog
      options:
        tag: offen
    labels:
      - docker-volume-backup.stop-during-backup=true
    depends_on:
      - mysql
      

  mysql:
    image: mariadb
    container_name: mariadb
    hostname: mariadb
    restart: unless-stopped
    volumes:
      - ./data/var/lib/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: offen
      # check the documentation for MYSQL_ROOT_PASSWORD_FILE for
      # how to avoid putting the password in here
      MYSQL_ROOT_PASSWORD: offen
